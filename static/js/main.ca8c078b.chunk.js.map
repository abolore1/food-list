{"version":3,"sources":["RatingStar.js","Foods.js","App.js","reportWebVitals.js","index.js"],"names":["StarIcon","props","fill","className","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","RatingIcon","index","rating","hoverRating","onMouseEnter","onMouseLeave","onSaveRating","React","useMemo","onClick","App","useState","setRating","setHoverRating","map","Foods","src","strCategoryThumb","alt","strCategory","strCategoryDescription","slice","RatingStar","state","foods","loading","fetch","then","res","json","data","console","log","categories","setState","catch","err","alert","food","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAEA,SAASA,EAASC,GAChB,MAAqBA,EAAfC,YAAN,MAAW,OAAX,EACA,OACE,qBAAKC,UAAU,UAAUD,KAAMA,EAC/BE,OAAO,eAAeC,QAAQ,YAC9BC,MAAM,6BAFN,SAGA,sBAAMC,cAAc,QAAQC,eAAe,QAC3CC,YAAa,EAAGC,EAAE,8WAGtB,SAASC,EAAWV,GAClB,IACEW,EAMEX,EANFW,MACAC,EAKEZ,EALFY,OACAC,EAIEb,EAJFa,YACAC,EAGEd,EAHFc,aACAC,EAEEf,EAFFe,aACAC,EACEhB,EADFgB,aAGIf,EAAOgB,IAAMC,SAAQ,WACzB,OAAIL,GAAcF,IAEPE,GAAeD,GAAUD,EAD1B,SAID,SAER,CAACC,EAAOD,EAAME,IAEjB,OACE,qBACEC,aAAc,kBAAKA,EAAaH,IAChCI,aAAc,kBAAKA,KACnBI,QAAS,kBAAKH,EAAaL,IAH7B,SAIE,cAACZ,EAAD,CAAUE,KAAMA,MAMtB,IA8BemB,EA9BL,WACR,MAA4BH,IAAMI,SAAS,GAA3C,mBAAOT,EAAP,KAAeU,EAAf,KACA,EAAsCL,IAAMI,SAAS,GAArD,mBAAOR,EAAP,KAAoBU,EAApB,KACMT,EAAa,SAACH,GAClBY,EAAeZ,IAEXI,EAAa,WACjBQ,EAAe,IAEXP,EAAa,SAACL,GAClBW,EAAUX,IAEZ,OACE,qBAAKT,UAAU,QAAf,SACG,CAAC,EAAE,EAAE,EAAE,EAAE,GAAGsB,KAAI,SAAAb,GAAK,OAClB,cAACD,EAAD,CAEAC,MAAOA,EACPC,OAAQA,EACRC,YAAaA,EACbC,aAAcA,EACdC,aAAcA,EACdC,aAAcA,UC9DT,SAASS,EAAMzB,GAC5B,OACE,sBAAKE,UAAU,OAAf,UACE,qBAAKA,UAAU,SAASwB,IAAK1B,EAAM2B,iBAAkBC,IAAI,oBACzD,sBAAK1B,UAAU,cAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,+BAAKF,EAAM6B,YAAX,SAEF,8BACE,oBAAG3B,UAAU,cAAb,UAA4BF,EAAM8B,uBAAuBC,MAAM,EAAE,IAAjE,cAGJ,sBAAK7B,UAAU,SAAf,UACE,mBAAGA,UAAU,OAAb,SACI,cAAC8B,EAAD,MAEJ,6C,ICuBOZ,E,4MArCba,MAAQ,CACNC,MAAM,GACNC,SAAQ,G,uDAGV,WAAsB,IAAD,OAEnBC,MAAM,0DACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,EAAKG,YAClB,EAAKC,SAAS,CAACV,MAAMM,EAAKG,gBAG1BE,OAAM,SAAAC,GAAG,OAAIC,MAAM,8B,oBAItB,WACE,IAAIC,EAAOC,KAAKhB,MAAMC,MAAMV,KAAI,SAAAwB,GAC9B,OAAO,cAACvB,EAAD,CACPE,iBAAkBqB,EAAKrB,iBACvBE,YAAamB,EAAKnB,YAClBC,uBAAwBkB,EAAKlB,wBAHVkB,EAAKnB,gBAQ1B,OACE,qBAAK3B,UAAU,2BAAf,SACE8C,Q,GA/BU/B,IAAMiC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.ca8c078b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css'\r\nfunction StarIcon(props) {\r\n  const{fill='none'} = props\r\n  return (\r\n    <svg className=\"w-6 h-6\" fill={fill}\r\n    stroke=\"currentColor\" viewBox=\"0 0 24 24\"\r\n    xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" \r\n    strokeWidth={2} d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\" /></svg>\r\n  )\r\n}\r\nfunction RatingIcon(props){\r\n  const {\r\n    index,\r\n    rating,\r\n    hoverRating,\r\n    onMouseEnter,\r\n    onMouseLeave,\r\n    onSaveRating,\r\n  } = props;\r\n\r\n  const fill = React.useMemo(()=>{\r\n    if (hoverRating >=index) {\r\n       return 'yellow'\r\n    } else if(!hoverRating && rating >= index) {\r\n       return 'yellow'\r\n    } \r\n      return 'none'\r\n\r\n  }, [rating,index,hoverRating]);\r\n\r\n  return(\r\n    <div \r\n      onMouseEnter={()=> onMouseEnter(index)}\r\n      onMouseLeave={()=> onMouseLeave()}\r\n      onClick={()=> onSaveRating(index)}>\r\n      <StarIcon fill={fill}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst App=()=>{\r\n  const [rating, setRating] = React.useState(0);\r\n  const [hoverRating, setHoverRating] = React.useState(0);\r\n  const onMouseEnter=(index)=>{\r\n    setHoverRating(index);\r\n  };\r\n  const onMouseLeave=()=>{\r\n    setHoverRating(0)\r\n  };\r\n  const onSaveRating=(index)=>{\r\n    setRating(index)\r\n  };\r\n  return(\r\n    <div className='stars'>\r\n      {[1,2,3,4,5].map(index =>\r\n          <RatingIcon\r\n          //props\r\n          index={index}\r\n          rating={rating}\r\n          hoverRating={hoverRating}\r\n          onMouseEnter={onMouseEnter}\r\n          onMouseLeave={onMouseLeave}\r\n          onSaveRating={onSaveRating}\r\n          />\r\n      )}\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport RatingStar from './RatingStar'\r\n\r\nexport default function Foods(props) {\r\n  return (\r\n    <div className=\"food\">\r\n      <img className=\"images\" src={props.strCategoryThumb} alt=\" not displaying\" />\r\n      <div className=\"foodDetails\">\r\n        <div className='mealNamePrice'>\r\n          <h1>{props.strCategory} </h1>\r\n        </div>\r\n        <div>\r\n          <p className=\"description\">{props.strCategoryDescription.slice(0,45)}...</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"footer\">\r\n        <p className=\"para\">\r\n            <RatingStar />\r\n        </p>\r\n        <button>+</button>\r\n      </div>\r\n      \r\n    </div>\r\n\r\n  )\r\n}\r\n","import React from 'react'\nimport Foods from './Foods'\nimport './App.css';\n\nclass App extends React.Component {\n  state = { \n    foods:[],\n    loading:true\n   }\n\n  componentDidMount()  {\n\n    fetch('https://www.themealdb.com/api/json/v1/1/categories.php')\n    .then(res => res.json())\n    .then(data => {\n      console.log(data.categories)\n     this.setState({foods:data.categories})\n\n    })\n    .catch(err => alert('Something went wrong!'))\n\n  }\n\n  render() { \n    let food = this.state.foods.map(food => {\n      return <Foods key={food.strCategory} \n      strCategoryThumb={food.strCategoryThumb}\n      strCategory={food.strCategory}\n      strCategoryDescription={food.strCategoryDescription}\n      // ratings={food.ratings}\n       />\n    });\n    \n    return (  \n      <div className=\"container grid-container\">\n       {food}\n      \n     </div>\n    );\n  }\n}\n \nexport default App ;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}